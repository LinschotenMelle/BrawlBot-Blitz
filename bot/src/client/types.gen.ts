// This file is auto-generated by @hey-api/openapi-ts

export type UserDto = {
    discordId: string;
    accessToken: string;
    refreshToken: string;
    username: string;
    discriminator: string;
    avatar: string;
};

export type UpdateWalletBalanceDto = {
    coins: number;
    powerpoints: number;
};

export type WalletCollectableDto = {
    id: string;
    name: string;
    price: number;
    imageUrl: string;
};

export type WalletDto = {
    userId: string;
    coins: number;
    powerpoints: number;
    collectables: Array<WalletCollectableDto>;
};

export type PartialGuildDto = {
    id: string;
    name: string;
    icon: string;
    owner: boolean;
    permissions: number;
    features: Array<(string)>;
    isActive: boolean;
};

export type GuildChannelDto = {
    id: string;
    name: string;
    type: number;
};

export type WelcomeMessageDto = {
    guildId: string;
    channelId: string;
};

export type CreateMemberCountDto = {
    channelId: string;
};

export type GuildMemberCountDto = {
    guildId: string;
    channelId: string;
};

export type CreateYoutubeChannelDto = {
    guildId: string;
    apiKey: string;
    channelId: string;
    guildChannelId: string;
    roleId: string;
    latestVideoDateTime: string;
    isActive: boolean;
};

export type YoutubeChannelDto = {
    guildId: string;
    guildChannelId: string;
    latestVideoDateTime: string;
    roleId: string;
};

export type YoutubeVideoDto = {
    id: string;
    publishedAt: string;
    channelTitle: string;
    channelId: string;
    videoTitle: string;
    videoUrl: string;
    thumbnailUrl: string;
    description?: string;
};

export type CreateImageDto = {
    prompt: string;
};

export type ImageDto = {
    url: string;
};

export type UpsertBrawlStarsUserDto = {
    userId: string;
    tag: string;
};

export type BrawlStarsUserDto = {
    tag: number;
};

export type BrawlStarsEventDto = {
    id: string;
    mode: string;
    map: string;
};

export type BrawlStarsMapDto = {
    startTime: string;
    endTime: string;
    slotId: number;
    event: BrawlStarsEventDto;
};

export type IconDto = {
    id: number;
};

export type ClubDto = {
    tag: string;
    name: string;
    badgeId?: number;
    trophies?: number;
    rank?: number;
    memberCount?: number;
};

export type BrawlerDto = {
    id: number;
    name: string;
    power: number;
    rank: number;
    trophies: number;
    highestTrophies: number;
    gears: Array<(string)>;
    starPowers: Array<(string)>;
    gadgets: Array<(string)>;
};

export type PlayerDto = {
    tag: string;
    name: string;
    nameColor: string;
    icon: IconDto;
    trophies: number;
    highestTrophies?: number;
    highestPowerPlayPoints?: number;
    expLevel?: number;
    expPoints?: number;
    isQualifiedFromChampionshipChallenge?: boolean;
    '3vs3Victories'?: number;
    soloVictories?: number;
    duoVictories?: number;
    bestRoboRumbleTime?: number;
    bestTimeAsBigBrawler?: number;
    club?: ClubDto;
    brawlers?: Array<BrawlerDto>;
};

export type AuthControllerLoginResponse = unknown;

export type AuthControllerLoginError = unknown;

export type AuthControllerRedirectResponse = unknown;

export type AuthControllerRedirectError = unknown;

export type AuthControllerMeResponse = UserDto;

export type AuthControllerMeError = unknown;

export type AuthControllerLogoutResponse = unknown;

export type AuthControllerLogoutError = unknown;

export type UserControllerUpdateWalletBalanceData = {
    body: UpdateWalletBalanceDto;
    path: {
        userId: string;
    };
};

export type UserControllerUpdateWalletBalanceResponse = WalletDto;

export type UserControllerUpdateWalletBalanceError = unknown;

export type UserControllerGetWalletBalanceData = {
    path: {
        userId: string;
    };
};

export type UserControllerGetWalletBalanceResponse = WalletDto;

export type UserControllerGetWalletBalanceError = unknown;

export type DiscordControllerGetGuildsResponse = Array<PartialGuildDto>;

export type DiscordControllerGetGuildsError = unknown;

export type DiscordControllerGetGuildDetailsData = {
    path: {
        guildId: string;
    };
};

export type DiscordControllerGetGuildDetailsResponse = PartialGuildDto;

export type DiscordControllerGetGuildDetailsError = unknown;

export type DiscordControllerGetGuildChannelsData = {
    path: {
        guildId: string;
    };
};

export type DiscordControllerGetGuildChannelsResponse = Array<GuildChannelDto>;

export type DiscordControllerGetGuildChannelsError = unknown;

export type DiscordControllerGetWelcomeMessageData = {
    path: {
        guildId: string;
    };
};

export type DiscordControllerGetWelcomeMessageResponse = WelcomeMessageDto;

export type DiscordControllerGetWelcomeMessageError = unknown;

export type DiscordControllerPostMemberCountData = {
    body: CreateMemberCountDto;
    path: {
        guildId: string;
    };
};

export type DiscordControllerPostMemberCountResponse = GuildMemberCountDto;

export type DiscordControllerPostMemberCountError = unknown;

export type DiscordControllerGetMemberCountData = {
    path: {
        guildId: string;
    };
};

export type DiscordControllerGetMemberCountResponse = GuildMemberCountDto;

export type DiscordControllerGetMemberCountError = unknown;

export type YoutubeControllerCreateChannelData = {
    body: CreateYoutubeChannelDto;
};

export type YoutubeControllerCreateChannelResponse = YoutubeChannelDto;

export type YoutubeControllerCreateChannelError = unknown;

export type YoutubeControllerGetChannelsResponse = Array<YoutubeChannelDto>;

export type YoutubeControllerGetChannelsError = unknown;

export type YoutubeControllerGetChannelData = {
    path: {
        guildId: string;
    };
};

export type YoutubeControllerGetChannelResponse = YoutubeChannelDto;

export type YoutubeControllerGetChannelError = unknown;

export type YoutubeControllerUpdateChannelData = {
    path: {
        guildId: string;
    };
};

export type YoutubeControllerUpdateChannelResponse = unknown;

export type YoutubeControllerUpdateChannelError = unknown;

export type YoutubeControllerSearchLatestVideoData = {
    path: {
        guildId: string;
    };
};

export type YoutubeControllerSearchLatestVideoResponse = YoutubeVideoDto;

export type YoutubeControllerSearchLatestVideoError = unknown;

export type OpenaiControllerCreateImageData = {
    body: CreateImageDto;
};

export type OpenaiControllerCreateImageResponse = ImageDto;

export type OpenaiControllerCreateImageError = unknown;

export type BrawlStarsControllerSaveProfileData = {
    body: UpsertBrawlStarsUserDto;
};

export type BrawlStarsControllerSaveProfileResponse = BrawlStarsUserDto;

export type BrawlStarsControllerSaveProfileError = unknown;

export type BrawlStarsControllerUpdateProfileData = {
    body: UpsertBrawlStarsUserDto;
};

export type BrawlStarsControllerUpdateProfileResponse = BrawlStarsUserDto;

export type BrawlStarsControllerUpdateProfileError = unknown;

export type BrawlStarsControllerGetRotationResponse = Array<BrawlStarsMapDto>;

export type BrawlStarsControllerGetRotationError = unknown;

export type BrawlStarsControllerGetProfileData = {
    path: {
        userId: string;
    };
};

export type BrawlStarsControllerGetProfileResponse = PlayerDto;

export type BrawlStarsControllerGetProfileError = unknown;

export type BrawlStarsControllerGetProfileByTagData = {
    path: {
        tag: string;
    };
};

export type BrawlStarsControllerGetProfileByTagResponse = PlayerDto;

export type BrawlStarsControllerGetProfileByTagError = unknown;

export type BrawlStarsControllerGetBrawlersResponse = Array<BrawlerDto>;

export type BrawlStarsControllerGetBrawlersError = unknown;

export type BrawlStarsControllerGetClubsData = {
    query: {
        countryCode: string;
    };
};

export type BrawlStarsControllerGetClubsResponse = Array<ClubDto>;

export type BrawlStarsControllerGetClubsError = unknown;

export type BrawlStarsControllerGetPlayersData = {
    query: {
        countryCode: string;
    };
};

export type BrawlStarsControllerGetPlayersResponse = Array<PlayerDto>;

export type BrawlStarsControllerGetPlayersError = unknown;

export type $OpenApiTs = {
    '/api/auth/login': {
        get: {
            res: {
                '200': unknown;
            };
        };
    };
    '/api/auth/redirect': {
        get: {
            res: {
                '200': unknown;
            };
        };
    };
    '/api/auth/me': {
        get: {
            res: {
                default: UserDto;
            };
        };
    };
    '/api/auth/logout': {
        post: {
            res: {
                '201': unknown;
            };
        };
    };
    '/api/user/{userId}/balance': {
        put: {
            req: UserControllerUpdateWalletBalanceData;
            res: {
                default: WalletDto;
            };
        };
        get: {
            req: UserControllerGetWalletBalanceData;
            res: {
                default: WalletDto;
            };
        };
    };
    '/api/discord/guilds': {
        get: {
            res: {
                default: Array<PartialGuildDto>;
            };
        };
    };
    '/api/discord/guilds/{guildId}': {
        get: {
            req: DiscordControllerGetGuildDetailsData;
            res: {
                default: PartialGuildDto;
            };
        };
    };
    '/api/discord/guilds/{guildId}/channels': {
        get: {
            req: DiscordControllerGetGuildChannelsData;
            res: {
                default: Array<GuildChannelDto>;
            };
        };
    };
    '/api/discord/guilds/{guildId}/welcome-message': {
        get: {
            req: DiscordControllerGetWelcomeMessageData;
            res: {
                default: WelcomeMessageDto;
            };
        };
    };
    '/api/discord/guilds/{guildId}/member-count': {
        post: {
            req: DiscordControllerPostMemberCountData;
            res: {
                default: GuildMemberCountDto;
            };
        };
        get: {
            req: DiscordControllerGetMemberCountData;
            res: {
                default: GuildMemberCountDto;
            };
        };
    };
    '/api/youtube': {
        post: {
            req: YoutubeControllerCreateChannelData;
            res: {
                default: YoutubeChannelDto;
            };
        };
    };
    '/api/youtube/channels': {
        get: {
            res: {
                default: Array<YoutubeChannelDto>;
            };
        };
    };
    '/api/youtube/{guildId}': {
        get: {
            req: YoutubeControllerGetChannelData;
            res: {
                default: YoutubeChannelDto;
            };
        };
    };
    '/api/youtube/channels/{guildId}': {
        put: {
            req: YoutubeControllerUpdateChannelData;
            res: {
                '200': unknown;
            };
        };
    };
    '/api/youtube/{guildId}/search-latest-video': {
        get: {
            req: YoutubeControllerSearchLatestVideoData;
            res: {
                default: YoutubeVideoDto;
            };
        };
    };
    '/api/openai/generate-image': {
        post: {
            req: OpenaiControllerCreateImageData;
            res: {
                default: ImageDto;
            };
        };
    };
    '/api/brawl-stars/save': {
        post: {
            req: BrawlStarsControllerSaveProfileData;
            res: {
                default: BrawlStarsUserDto;
            };
        };
    };
    '/api/brawl-stars/update': {
        put: {
            req: BrawlStarsControllerUpdateProfileData;
            res: {
                default: BrawlStarsUserDto;
            };
        };
    };
    '/api/brawl-stars/rotation': {
        get: {
            res: {
                default: Array<BrawlStarsMapDto>;
            };
        };
    };
    '/api/brawl-stars/profile/{userId}': {
        get: {
            req: BrawlStarsControllerGetProfileData;
            res: {
                default: PlayerDto;
            };
        };
    };
    '/api/brawl-stars/profile/{tag}': {
        get: {
            req: BrawlStarsControllerGetProfileByTagData;
            res: {
                default: PlayerDto;
            };
        };
    };
    '/api/brawl-stars/brawlers': {
        get: {
            res: {
                default: Array<BrawlerDto>;
            };
        };
    };
    '/api/brawl-stars/clubs': {
        get: {
            req: BrawlStarsControllerGetClubsData;
            res: {
                default: Array<ClubDto>;
            };
        };
    };
    '/api/brawl-stars/players': {
        get: {
            req: BrawlStarsControllerGetPlayersData;
            res: {
                default: Array<PlayerDto>;
            };
        };
    };
};