// This file is auto-generated by @hey-api/openapi-ts

export const $User = {
    type: 'object',
    properties: {
        id: {
            type: 'number'
        },
        discordId: {
            type: 'string'
        },
        accessToken: {
            type: 'string'
        },
        refreshToken: {
            type: 'string'
        },
        username: {
            type: 'string'
        },
        discriminator: {
            type: 'string'
        },
        avatar: {
            type: 'string'
        }
    },
    required: ['id', 'discordId', 'accessToken', 'refreshToken', 'username', 'discriminator', 'avatar']
} as const;

export const $PartialGuild = {
    type: 'object',
    properties: {
        id: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        icon: {
            type: 'string'
        },
        owner: {
            type: 'boolean'
        },
        permissions: {
            type: 'number'
        },
        features: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        isActive: {
            type: 'boolean'
        }
    },
    required: ['id', 'name', 'icon', 'owner', 'permissions', 'features', 'isActive']
} as const;

export const $GuildChannel = {
    type: 'object',
    properties: {
        id: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        type: {
            type: 'number'
        }
    },
    required: ['id', 'name', 'type']
} as const;

export const $WelcomeMessage = {
    type: 'object',
    properties: {
        guildId: {
            type: 'string'
        },
        channelId: {
            type: 'string'
        }
    },
    required: ['guildId', 'channelId']
} as const;

export const $CreateMemberCount = {
    type: 'object',
    properties: {
        channelId: {
            type: 'string'
        }
    },
    required: ['channelId']
} as const;

export const $GuildMemberCount = {
    type: 'object',
    properties: {
        guildId: {
            type: 'string'
        },
        channelId: {
            type: 'string'
        }
    },
    required: ['guildId', 'channelId']
} as const;

export const $YoutubeChannel = {
    type: 'object',
    properties: {
        guildId: {
            type: 'string'
        },
        apiKey: {
            type: 'string'
        },
        channelId: {
            type: 'string'
        },
        guildChannelId: {
            type: 'string'
        },
        roleId: {
            type: 'string'
        },
        latestVideoDateTime: {
            format: 'date-time',
            type: 'string'
        },
        isActive: {
            type: 'boolean'
        }
    },
    required: ['guildId', 'apiKey', 'channelId', 'guildChannelId', 'roleId', 'latestVideoDateTime', 'isActive']
} as const;

export const $YoutubeChannelDto = {
    type: 'object',
    properties: {
        guildId: {
            type: 'string'
        },
        guildChannelId: {
            type: 'string'
        },
        latestVideoDateTime: {
            type: 'string'
        },
        roleId: {
            type: 'string'
        }
    },
    required: ['guildId', 'guildChannelId', 'latestVideoDateTime', 'roleId']
} as const;

export const $YoutubeVideoIdDto = {
    type: 'object',
    properties: {
        videoId: {
            type: 'string'
        }
    },
    required: ['videoId']
} as const;

export const $YoutubeHighThumbnailDto = {
    type: 'object',
    properties: {
        url: {
            type: 'string'
        }
    },
    required: ['url']
} as const;

export const $YoutubeThumbnailsDto = {
    type: 'object',
    properties: {
        high: {
            '$ref': '#/components/schemas/YoutubeHighThumbnailDto'
        }
    },
    required: ['high']
} as const;

export const $YoutubeSnippetDto = {
    type: 'object',
    properties: {
        publishedAt: {
            type: 'string'
        },
        published: {
            type: 'string'
        },
        channelTitle: {
            type: 'string'
        },
        channelId: {
            type: 'string'
        },
        title: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        thumbnails: {
            '$ref': '#/components/schemas/YoutubeThumbnailsDto'
        }
    },
    required: ['publishedAt', 'published', 'channelTitle', 'channelId', 'title', 'thumbnails']
} as const;

export const $YoutubeVideoDto = {
    type: 'object',
    properties: {
        id: {
            '$ref': '#/components/schemas/YoutubeVideoIdDto'
        },
        snippet: {
            '$ref': '#/components/schemas/YoutubeSnippetDto'
        }
    },
    required: ['id', 'snippet']
} as const;

export const $CreateImageDto = {
    type: 'object',
    properties: {
        prompt: {
            type: 'string'
        }
    },
    required: ['prompt']
} as const;

export const $ImageDto = {
    type: 'object',
    properties: {
        url: {
            type: 'string'
        }
    },
    required: ['url']
} as const;

export const $BrawlStarsUser = {
    type: 'object',
    properties: {
        userId: {
            type: 'string'
        },
        tag: {
            type: 'string'
        }
    },
    required: ['userId', 'tag']
} as const;

export const $BrawlStarsEventDto = {
    type: 'object',
    properties: {
        id: {
            type: 'string'
        },
        mode: {
            type: 'string'
        },
        map: {
            type: 'string'
        }
    },
    required: ['id', 'mode', 'map']
} as const;

export const $BrawlStarsMapDto = {
    type: 'object',
    properties: {
        startTime: {
            type: 'string'
        },
        endTime: {
            type: 'string'
        },
        slotId: {
            type: 'number'
        },
        event: {
            '$ref': '#/components/schemas/BrawlStarsEventDto'
        }
    },
    required: ['startTime', 'endTime', 'slotId', 'event']
} as const;

export const $Icon = {
    type: 'object',
    properties: {
        id: {
            type: 'number'
        }
    },
    required: ['id']
} as const;

export const $Club = {
    type: 'object',
    properties: {
        tag: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        badgeId: {
            type: 'number'
        },
        trophies: {
            type: 'number'
        },
        rank: {
            type: 'number'
        },
        memberCount: {
            type: 'number'
        }
    },
    required: ['tag', 'name']
} as const;

export const $Brawler = {
    type: 'object',
    properties: {
        id: {
            type: 'number'
        },
        name: {
            type: 'string'
        },
        power: {
            type: 'number'
        },
        rank: {
            type: 'number'
        },
        trophies: {
            type: 'number'
        },
        highestTrophies: {
            type: 'number'
        },
        gears: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        starPowers: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        gadgets: {
            type: 'array',
            items: {
                type: 'string'
            }
        }
    },
    required: ['id', 'name', 'power', 'rank', 'trophies', 'highestTrophies', 'gears', 'starPowers', 'gadgets']
} as const;

export const $BrawlStarsPlayer = {
    type: 'object',
    properties: {
        tag: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        nameColor: {
            type: 'string'
        },
        icon: {
            '$ref': '#/components/schemas/Icon'
        },
        trophies: {
            type: 'number'
        },
        highestTrophies: {
            type: 'number'
        },
        highestPowerPlayPoints: {
            type: 'number'
        },
        expLevel: {
            type: 'number'
        },
        expPoints: {
            type: 'number'
        },
        isQualifiedFromChampionshipChallenge: {
            type: 'boolean'
        },
        '3vs3Victories': {
            type: 'number'
        },
        soloVictories: {
            type: 'number'
        },
        duoVictories: {
            type: 'number'
        },
        bestRoboRumbleTime: {
            type: 'number'
        },
        bestTimeAsBigBrawler: {
            type: 'number'
        },
        club: {
            '$ref': '#/components/schemas/Club'
        },
        brawlers: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Brawler'
            }
        }
    },
    required: ['tag', 'name', 'nameColor', 'icon', 'trophies']
} as const;