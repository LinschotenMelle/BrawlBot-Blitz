// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-axios';
import type { AuthControllerLoginError, AuthControllerLoginResponse, AuthControllerRedirectError, AuthControllerRedirectResponse, AuthControllerMeError, AuthControllerMeResponse, AuthControllerLogoutError, AuthControllerLogoutResponse, UserControllerUpdateWalletBalanceData, UserControllerUpdateWalletBalanceError, UserControllerUpdateWalletBalanceResponse, UserControllerGetWalletBalanceData, UserControllerGetWalletBalanceError, UserControllerGetWalletBalanceResponse, DiscordControllerGetGuildsError, DiscordControllerGetGuildsResponse, DiscordControllerGetGuildDetailsData, DiscordControllerGetGuildDetailsError, DiscordControllerGetGuildDetailsResponse, DiscordControllerGetGuildChannelsData, DiscordControllerGetGuildChannelsError, DiscordControllerGetGuildChannelsResponse, DiscordControllerGetWelcomeMessageData, DiscordControllerGetWelcomeMessageError, DiscordControllerGetWelcomeMessageResponse, DiscordControllerPostMemberCountData, DiscordControllerPostMemberCountError, DiscordControllerPostMemberCountResponse, DiscordControllerGetMemberCountData, DiscordControllerGetMemberCountError, DiscordControllerGetMemberCountResponse, YoutubeControllerCreateChannelData, YoutubeControllerCreateChannelError, YoutubeControllerCreateChannelResponse, YoutubeControllerGetChannelsError, YoutubeControllerGetChannelsResponse, YoutubeControllerGetChannelData, YoutubeControllerGetChannelError, YoutubeControllerGetChannelResponse, YoutubeControllerUpdateChannelData, YoutubeControllerUpdateChannelError, YoutubeControllerUpdateChannelResponse, YoutubeControllerSearchLatestVideoData, YoutubeControllerSearchLatestVideoError, YoutubeControllerSearchLatestVideoResponse, OpenaiControllerCreateImageData, OpenaiControllerCreateImageError, OpenaiControllerCreateImageResponse, BrawlStarsControllerSaveProfileData, BrawlStarsControllerSaveProfileError, BrawlStarsControllerSaveProfileResponse, BrawlStarsControllerUpdateProfileData, BrawlStarsControllerUpdateProfileError, BrawlStarsControllerUpdateProfileResponse, BrawlStarsControllerGetRotationError, BrawlStarsControllerGetRotationResponse, BrawlStarsControllerGetProfileData, BrawlStarsControllerGetProfileError, BrawlStarsControllerGetProfileResponse, BrawlStarsControllerGetProfileByTagData, BrawlStarsControllerGetProfileByTagError, BrawlStarsControllerGetProfileByTagResponse, BrawlStarsControllerGetBrawlersError, BrawlStarsControllerGetBrawlersResponse, BrawlStarsControllerGetClubsData, BrawlStarsControllerGetClubsError, BrawlStarsControllerGetClubsResponse, BrawlStarsControllerGetPlayersData, BrawlStarsControllerGetPlayersError, BrawlStarsControllerGetPlayersResponse } from './types.gen';

export const client = createClient(createConfig());

export const authControllerLogin = (options?: Options) => { return (options?.client ?? client).get<AuthControllerLoginResponse, AuthControllerLoginError>({
    ...options,
    url: '/api/auth/login'
}); };

export const authControllerRedirect = (options?: Options) => { return (options?.client ?? client).get<AuthControllerRedirectResponse, AuthControllerRedirectError>({
    ...options,
    url: '/api/auth/redirect'
}); };

export const authControllerMe = (options?: Options) => { return (options?.client ?? client).get<AuthControllerMeResponse, AuthControllerMeError>({
    ...options,
    url: '/api/auth/me'
}); };

export const authControllerLogout = (options?: Options) => { return (options?.client ?? client).post<AuthControllerLogoutResponse, AuthControllerLogoutError>({
    ...options,
    url: '/api/auth/logout'
}); };

export const userControllerUpdateWalletBalance = (options: Options<UserControllerUpdateWalletBalanceData>) => { return (options?.client ?? client).put<UserControllerUpdateWalletBalanceResponse, UserControllerUpdateWalletBalanceError>({
    ...options,
    url: '/api/user/{userId}/balance'
}); };

export const userControllerGetWalletBalance = (options: Options<UserControllerGetWalletBalanceData>) => { return (options?.client ?? client).get<UserControllerGetWalletBalanceResponse, UserControllerGetWalletBalanceError>({
    ...options,
    url: '/api/user/{userId}/balance'
}); };

export const discordControllerGetGuilds = (options?: Options) => { return (options?.client ?? client).get<DiscordControllerGetGuildsResponse, DiscordControllerGetGuildsError>({
    ...options,
    url: '/api/discord/guilds'
}); };

export const discordControllerGetGuildDetails = (options: Options<DiscordControllerGetGuildDetailsData>) => { return (options?.client ?? client).get<DiscordControllerGetGuildDetailsResponse, DiscordControllerGetGuildDetailsError>({
    ...options,
    url: '/api/discord/guilds/{guildId}'
}); };

export const discordControllerGetGuildChannels = (options: Options<DiscordControllerGetGuildChannelsData>) => { return (options?.client ?? client).get<DiscordControllerGetGuildChannelsResponse, DiscordControllerGetGuildChannelsError>({
    ...options,
    url: '/api/discord/guilds/{guildId}/channels'
}); };

export const discordControllerGetWelcomeMessage = (options: Options<DiscordControllerGetWelcomeMessageData>) => { return (options?.client ?? client).get<DiscordControllerGetWelcomeMessageResponse, DiscordControllerGetWelcomeMessageError>({
    ...options,
    url: '/api/discord/guilds/{guildId}/welcome-message'
}); };

export const discordControllerPostMemberCount = (options: Options<DiscordControllerPostMemberCountData>) => { return (options?.client ?? client).post<DiscordControllerPostMemberCountResponse, DiscordControllerPostMemberCountError>({
    ...options,
    url: '/api/discord/guilds/{guildId}/member-count'
}); };

export const discordControllerGetMemberCount = (options: Options<DiscordControllerGetMemberCountData>) => { return (options?.client ?? client).get<DiscordControllerGetMemberCountResponse, DiscordControllerGetMemberCountError>({
    ...options,
    url: '/api/discord/guilds/{guildId}/member-count'
}); };

export const youtubeControllerCreateChannel = (options: Options<YoutubeControllerCreateChannelData>) => { return (options?.client ?? client).post<YoutubeControllerCreateChannelResponse, YoutubeControllerCreateChannelError>({
    ...options,
    url: '/api/youtube'
}); };

export const youtubeControllerGetChannels = (options?: Options) => { return (options?.client ?? client).get<YoutubeControllerGetChannelsResponse, YoutubeControllerGetChannelsError>({
    ...options,
    url: '/api/youtube/channels'
}); };

export const youtubeControllerGetChannel = (options: Options<YoutubeControllerGetChannelData>) => { return (options?.client ?? client).get<YoutubeControllerGetChannelResponse, YoutubeControllerGetChannelError>({
    ...options,
    url: '/api/youtube/{guildId}'
}); };

export const youtubeControllerUpdateChannel = (options: Options<YoutubeControllerUpdateChannelData>) => { return (options?.client ?? client).put<YoutubeControllerUpdateChannelResponse, YoutubeControllerUpdateChannelError>({
    ...options,
    url: '/api/youtube/channels/{guildId}'
}); };

export const youtubeControllerSearchLatestVideo = (options: Options<YoutubeControllerSearchLatestVideoData>) => { return (options?.client ?? client).get<YoutubeControllerSearchLatestVideoResponse, YoutubeControllerSearchLatestVideoError>({
    ...options,
    url: '/api/youtube/{guildId}/search-latest-video'
}); };

export const openaiControllerCreateImage = (options: Options<OpenaiControllerCreateImageData>) => { return (options?.client ?? client).post<OpenaiControllerCreateImageResponse, OpenaiControllerCreateImageError>({
    ...options,
    url: '/api/openai/generate-image'
}); };

export const brawlStarsControllerSaveProfile = (options: Options<BrawlStarsControllerSaveProfileData>) => { return (options?.client ?? client).post<BrawlStarsControllerSaveProfileResponse, BrawlStarsControllerSaveProfileError>({
    ...options,
    url: '/api/brawl-stars/save'
}); };

export const brawlStarsControllerUpdateProfile = (options: Options<BrawlStarsControllerUpdateProfileData>) => { return (options?.client ?? client).put<BrawlStarsControllerUpdateProfileResponse, BrawlStarsControllerUpdateProfileError>({
    ...options,
    url: '/api/brawl-stars/update'
}); };

export const brawlStarsControllerGetRotation = (options?: Options) => { return (options?.client ?? client).get<BrawlStarsControllerGetRotationResponse, BrawlStarsControllerGetRotationError>({
    ...options,
    url: '/api/brawl-stars/rotation'
}); };

export const brawlStarsControllerGetProfile = (options: Options<BrawlStarsControllerGetProfileData>) => { return (options?.client ?? client).get<BrawlStarsControllerGetProfileResponse, BrawlStarsControllerGetProfileError>({
    ...options,
    url: '/api/brawl-stars/profile/{userId}'
}); };

export const brawlStarsControllerGetProfileByTag = (options: Options<BrawlStarsControllerGetProfileByTagData>) => { return (options?.client ?? client).get<BrawlStarsControllerGetProfileByTagResponse, BrawlStarsControllerGetProfileByTagError>({
    ...options,
    url: '/api/brawl-stars/profile/{tag}'
}); };

export const brawlStarsControllerGetBrawlers = (options?: Options) => { return (options?.client ?? client).get<BrawlStarsControllerGetBrawlersResponse, BrawlStarsControllerGetBrawlersError>({
    ...options,
    url: '/api/brawl-stars/brawlers'
}); };

export const brawlStarsControllerGetClubs = (options: Options<BrawlStarsControllerGetClubsData>) => { return (options?.client ?? client).get<BrawlStarsControllerGetClubsResponse, BrawlStarsControllerGetClubsError>({
    ...options,
    url: '/api/brawl-stars/clubs'
}); };

export const brawlStarsControllerGetPlayers = (options: Options<BrawlStarsControllerGetPlayersData>) => { return (options?.client ?? client).get<BrawlStarsControllerGetPlayersResponse, BrawlStarsControllerGetPlayersError>({
    ...options,
    url: '/api/brawl-stars/players'
}); };